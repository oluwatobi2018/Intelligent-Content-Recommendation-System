# üåç Environment
NODE_ENV=test

# üöÄ Backend Configuration
PORT=5001  # Use a different port for testing to prevent conflicts
DATABASE_URL=mongodb://localhost:27017/test_db  # Use a separate test database
JWT_SECRET=test_secret_key
SESSION_SECRET=test_session_secret
CORS_ORIGIN=http://localhost:3000  # Allow frontend access

# OAuth (Google Example - Mock/Test Values)
GOOGLE_CLIENT_ID=test_google_client_id
GOOGLE_CLIENT_SECRET=test_google_client_secret
GOOGLE_CALLBACK_URL=http://localhost:5001/auth/google/callback

# üîê Security & Rate Limiting (Disabled for Testing)
RATE_LIMIT_WINDOW=0
RATE_LIMIT_MAX_REQUESTS=0

# üåê Frontend Configuration (Mock API URL)
NEXT_PUBLIC_API_URL=http://localhost:5001/api
NEXT_PUBLIC_GOOGLE_ANALYTICS_ID=TEST_ANALYTICS_ID

# üì° Third-Party APIs (Mock)
REDIS_URL=redis://localhost:6380  # Use a separate Redis instance for testing
SENTRY_DSN=
# Mock Sentry DSN for testing
# Add any other environment variables needed for testing
# Note: Ensure that your test database and Redis instance are set up and running.
# This file should not be committed to version control.
# Ensure that sensitive information is not exposed in your version control system.
# Use a .env.test file for your test environment to avoid conflicts with development and production settings.